apply from: rootProject.file("build-component.gradle")

if (project.ext.runAsApp) {
    apply plugin: 'spi'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'android-aspectjx'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (project.ext.runAsApp) {
            multiDexEnabled true
            renderscriptTargetApi 19
            renderscriptSupportModeEnabled true
        }

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    dataBinding {
//        enabled = true
//    }

    if (project.ext.runAsApp) {
        dexOptions {
            javaMaxHeapSize '4g'
        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }

        aaptOptions {
            cruncherEnabled false
            useNewCruncher false
        }
    }

}

aspectjx {
//排除所有package路径中包含`android.support`的class文件及库（jar文件）
    exclude 'android'
}

//androidkapt {
//    generateStubs = true
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    if ("knight-core" != project.name) {
        api project(":knight-core")
    }

    implementation "com.afirez.spi:spi:1.0.0"
    implementation "com.afirez.applike:applike:1.0.0"

    implementation rootProject.ext.dependencies["multidex"]

    implementation rootProject.ext.dependencies["kotlin-stdlib-jdk7"]
    implementation rootProject.ext.dependencies["kodein-di-generic-jvm"]
    implementation rootProject.ext.dependencies["kodein-di-framework-android-support"]
    implementation rootProject.ext.dependencies["aspectjrt"]

    kapt 'com.google.auto.service:auto-service:1.0-rc4'
    compileOnly 'com.google.auto.service:auto-service:1.0-rc4'
    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc4'

    implementation rootProject.ext.dependencies["lifecycle-extensions"]
    implementation rootProject.ext.dependencies["lifecycle-runtime"]
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["design"]
//    implementation rootProject.ext.dependencies["gallery-layout-manager"]

    // room database
    implementation rootProject.ext.dependencies["room-rxjava2"]
    implementation rootProject.ext.dependencies["room-runtime"]
    kapt rootProject.ext.dependencies["room-compiler"]

    implementation rootProject.ext.dependencies["glide"]
    kapt rootProject.ext.dependencies["glide-compiler"]

    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["okhttp3-logging-interceptor"]


    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxrelay2"]
    implementation rootProject.ext.dependencies["rxandroid2"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    implementation rootProject.ext.dependencies["rxcache2"]
    implementation rootProject.ext.dependencies["ReactiveCache"]
    implementation rootProject.ext.dependencies["rxcache-jolyglot-gson"]
    implementation rootProject.ext.dependencies["autodispose"]
    implementation rootProject.ext.dependencies["autodispose-arch"]
    implementation rootProject.ext.dependencies["autodispose-lifecycle"]
//    implementation rootProject.ext.dependencies["rxpermissions2"]
    implementation rootProject.ext.dependencies["rxandroidble2"]


    implementation rootProject.ext.dependencies["umeng-analytics"]
    implementation rootProject.ext.dependencies["timber"]
    implementation rootProject.ext.dependencies["stetho"]
    implementation rootProject.ext.dependencies["stetho-okhttp3"]
    implementation rootProject.ext.dependencies["bugly-crashreport"]
    implementation rootProject.ext.dependencies["bugly-nativecrashreport"]
    debugImplementation rootProject.ext.dependencies["leakCanary-debug"]
    releaseImplementation rootProject.ext.dependencies["leakCanary-release"]
    debugImplementation rootProject.ext.dependencies["blockCanary-debug"]
    releaseImplementation rootProject.ext.dependencies["blockCanary-release"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
}

